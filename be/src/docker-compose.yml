version: '3.9'

services:

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
      - jaeger

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: unless-stopped
    depends_on:
      - jaeger
      - prometheus
      - loki

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    restart: unless-stopped

  redis:
    image: redis:alpine

  seller-web-react-ssr:
    image: ${REGISTRY:-giuru}/seller-web-react-ssr:${PLATFORM:-linux}-${TAG:-latest}
    build: 
      context: ../../fe/projects/Seller.Portal
      dockerfile: Dockerfile-ssr-local
    restart: unless-stopped

  account-web-react-ssr:
    image: ${REGISTRY:-giuru}/account-web-react-ssr:${PLATFORM:-linux}-${TAG:-latest}
    build: 
      context: ../../fe/projects/Account
      dockerfile: Dockerfile-ssr-local
    restart: unless-stopped

  buyer-web-react-ssr:
    image: ${REGISTRY:-giuru}/buyer-web-react-ssr:${PLATFORM:-linux}-${TAG:-latest}
    build: 
      context: ../../fe/projects/AspNetCore
      dockerfile: Dockerfile-ssr-local
    restart: unless-stopped

  sqldata:
    image: mcr.microsoft.com/mssql/server:2022-CU15-GDR1-ubuntu-22.04
    user: root
    restart: unless-stopped

  postgres:
    image: postgres:10.5
    restart: unless-stopped

  media-api:
    image: ${REGISTRY:-giuru}/media-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Media/Media.Api/Dockerfile
    restart: unless-stopped
    depends_on:
      - azurite
      - sqldata
      - redis
      - otel-collector

  client-api:
    image: ${REGISTRY:-giuru}/client-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Client/Client.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - sqldata
      - redis
      - otel-collector

  inventory-api:
    image: ${REGISTRY:-giuru}/inventory-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Inventory/Inventory.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - sqldata
      - redis
      - rabbitmq
      - otel-collector
  
  news-api:
    image: ${REGISTRY:-giuru}/news-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/News/News.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - sqldata
      - redis
      - otel-collector

  catalog-api:
    image: ${REGISTRY:-giuru}/catalog-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Catalog/Catalog.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - sqldata
      - redis
      - elasticsearch
      - rabbitmq
      - media-api
      - otel-collector

  catalog-backgroundtasks:
    image: ${REGISTRY:-giuru}/catalog-backgroundtasks:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Catalog/Catalog.BackgroundTasks/Dockerfile
    restart: unless-stopped
    depends_on: 
      - catalog-api
      - sqldata
      - redis
      - rabbitmq
      - otel-collector

  identity-api:
    image: ${REGISTRY:-giuru}/identity-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Identity/Identity.Api/Dockerfile
    restart: unless-stopped
    depends_on: 
      - sqldata
      - redis
      - account-web-react-ssr
      - otel-collector

  basket-api:
    image: ${REGISTRY:-giuru}/basket-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Basket/Basket.Api/Dockerfile
    depends_on:
      - redis
      - identity-api
      - rabbitmq
      - otel-collector

  ordering-api:
    image: ${REGISTRY:-giuru}/ordering-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Ordering/Ordering.Api/Dockerfile
    depends_on:
      - catalog-api
      - redis
      - rabbitmq
      - otel-collector

  content-api:
    image: ${REGISTRY:-giuru}/content-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: Project/Services/Content/Content.Api
      dockerfile: Dockerfile-dev-local
    depends_on:
      - postgres
      - otel-collector

  downloadcenter-api:
    image: ${REGISTRY:-giuru}/download-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/DownloadCenter/DownloadCenter.Api/Dockerfile
    depends_on:
      - redis
      - sqldata
      - otel-collector

  analytics-api:
    image: ${REGISTRY:-giuru}/analytics-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Analytics/Analytics.Api/Dockerfile
    depends_on:
      - sqldata
      - redis
      - otel-collector
      
  global-api:
    image: ${REGISTRY:-giuru}/global-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Services/Global/Global.Api/Dockerfile
    depends_on:
      - redis
      - sqldata
      - otel-collector

  seller-web:
    image: ${REGISTRY:-giuru}/seller-web:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Web/Seller/Seller.Web/Dockerfile
    restart: unless-stopped
    depends_on: 
      - seller-web-react-ssr
      - analytics-api
      - media-api
      - client-api
      - inventory-api
      - global-api
      - downloadcenter-api
      - ordering-api
      - basket-api
      - content-api
      - catalog-api
      - catalog-backgroundtasks
      - news-api
      - redis
      - identity-api
      - otel-collector

  buyer-web:
    image: ${REGISTRY:-giuru}/buyer-web:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Project/Web/Buyer/Buyer.Web/Dockerfile
    restart: unless-stopped
    depends_on: 
      - buyer-web-react-ssr
      - analytics-api
      - media-api
      - client-api
      - inventory-api
      - global-api
      - downloadcenter-api
      - ordering-api
      - basket-api
      - content-api
      - catalog-api
      - catalog-backgroundtasks
      - news-api
      - redis
      - identity-api
      - otel-collector