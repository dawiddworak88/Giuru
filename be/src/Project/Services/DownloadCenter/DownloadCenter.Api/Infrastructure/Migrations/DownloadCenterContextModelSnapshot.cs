// <auto-generated />
using System;
using DownloadCenter.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DownloadCenter.Api.Infrastructure.Migrations
{
    [DbContext(typeof(DownloadCenterContext))]
    partial class DownloadCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("DownloadCenterCategories");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategoryFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("DownloadCenterCategoryFiles");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategoryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("DownloadCenterCategoryTranslations");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterFilesGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MediaItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("DownloadCenterFilesGroups");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategoryTranslation", b =>
                {
                    b.HasOne("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", null)
                        .WithMany("Translations")
                        .HasForeignKey("DownloadCenterCategoryId");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", b =>
            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", b =>
                {
                    b.HasOne("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategoryFile", b =>
                {
                    b.HasOne("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", null)
                        .WithMany("Files")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategoryTranslation", b =>
                {
                    b.HasOne("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", null)
                        .WithMany("Translations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DownloadCenter.Api.Infrastructure.Entities.DownloadCenterCategories.DownloadCenterCategory", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
