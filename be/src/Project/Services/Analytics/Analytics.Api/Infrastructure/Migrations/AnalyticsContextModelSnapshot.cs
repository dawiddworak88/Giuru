// <auto-generated />
using System;
using Analytics.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Analytics.Api.Infrastructure.Migrations
{
    [DbContext(typeof(AnalyticsContext))]
    partial class AnalyticsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ClientDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SalesFactId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SalesFactId");

                    b.ToTable("ClientDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.LocationDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SalesFactId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SalesFactId");

                    b.ToTable("LocationDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.LocationTranslationDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("LocationTranslationDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SalesFactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SalesFactId");

                    b.ToTable("ProductDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductTranslationDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ProductDimensionId");

                    b.ToTable("ProductTranslationDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOutlet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TimeDimensionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SalesFacts");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.TimeDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("Hour")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SalesFactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Second")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesFactId");

                    b.ToTable("TimeDimensions");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ClientDimension", b =>
                {
                    b.HasOne("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", null)
                        .WithMany("ClientDimensions")
                        .HasForeignKey("SalesFactId");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.LocationDimension", b =>
                {
                    b.HasOne("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", null)
                        .WithMany("LocationDimensions")
                        .HasForeignKey("SalesFactId");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductDimension", b =>
                {
                    b.HasOne("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", null)
                        .WithMany("ProductDimensions")
                        .HasForeignKey("SalesFactId");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductTranslationDimension", b =>
                {
                    b.HasOne("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductDimension", null)
                        .WithMany("Translations")
                        .HasForeignKey("ProductDimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.TimeDimension", b =>
                {
                    b.HasOne("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", null)
                        .WithMany("TimeDimensions")
                        .HasForeignKey("SalesFactId");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.ProductDimension", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Analytics.Api.Infrastructure.Entities.SalesAnalytics.SalesFact", b =>
                {
                    b.Navigation("ClientDimensions");

                    b.Navigation("LocationDimensions");

                    b.Navigation("ProductDimensions");

                    b.Navigation("TimeDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
