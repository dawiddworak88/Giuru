name: Seller-Web Test Deployment
run-name: ${{ github.actor }} is deploying Seller-Web to Test environment ðŸš€

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Seller-Web Continuous Integration"]
    branches: [develop]
    types: [completed]

concurrency:
  group: cd-giuru-test
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

jobs:
  Build-and-Deploy-Docker-Images:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Display Workflow Details
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.event.workflow_run.head_branch || github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.11.1"

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        working-directory: ./fe/projects/Seller.Portal

      - name: Build Website
        run: npm run build-fe-deploy
        working-directory: ./fe/projects/Seller.Portal

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.ACR_TEST_NAME }}
          username: ${{ secrets.ACR_TEST_LOGIN }}
          password: ${{ secrets.ACR_TEST_PASSWORD }}

      - name: Build and push Seller-Web-React-SSR Docker Image
        uses: docker/build-push-action@v5.0.0
        with:
          file: ./fe/projects/Seller.Portal/Dockerfile-ssr
          context: ./fe/projects/Seller.Portal
          push: true
          tags: ${{ secrets.ACR_TEST_NAME }}/seller-web-react-ssr:latest, ${{ secrets.ACR_TEST_NAME }}/seller-web-react-ssr:${{ github.run_number }}

      - name: Build and push Seller-Web Docker Image
        uses: docker/build-push-action@v5.0.0
        with:
          file: ./be/src/Project/Web/Seller/Seller.Web/Dockerfile
          context: ./be/src
          push: true
          tags: ${{ secrets.ACR_TEST_NAME }}/seller-web:latest, ${{ secrets.ACR_TEST_NAME }}/seller-web:${{ github.run_number }}

      - name: Checkout GitOps Repo
        uses: actions/checkout@v2
        with:
          repository: "Team-Eltap/giuru-gitops"
          token: ${{ secrets.GIT_REPOSITORY_TOKEN }}

      - name: Install yq (YAML Processor)
        run: sudo snap install yq

      - name: Update the image tag in Seller-Web-React-SSR Container deployment.yaml
        run: |
          yq eval '(.spec.template.spec.containers[] | select(.name == "seller-web-react-ssr-container").image) = "${{ secrets.ACR_TEST_NAME }}/seller-web-react-ssr:${{ github.run_number }}"' apps/seller-web-react-ssr/overlays/test/deployment.yaml -i

      - name: Update the image tag in Seller-Web Container deployment.yaml
        run: |
          yq eval '(.spec.template.spec.containers[] | select(.name == "seller-web-container").image) = "${{ secrets.ACR_TEST_NAME }}/seller-web:${{ github.run_number }}"' apps/seller-web/overlays/test/deployment.yaml -i
      
      - name: Commit and Push changes
        run: |
          git config --global user.name 'Test Deployment'
          git config --global user.email 'test@deployment.com'
          git add apps/seller-web/overlays/test/deployment.yaml
          git add apps/seller-web-react-ssr/overlays/test/deployment.yaml
          git commit -m "Updated image tag to ${{ github.run_number }} for Seller-Web"
          git push
