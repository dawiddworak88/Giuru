trigger:
  branches:
    include:
    - main
  paths:
    include:
    - be/src/Project/Web/Buyer/Buyer.Web

pr: none

variables:
- group: global
- group: production
- template: './variables.yml'
- name: b2bBuyerWebDockerfile
  value: 'be/src/Project/Web/Buyer/Buyer.Web/Dockerfile'
- name: dockerfileWebsiteBuildContext
  value: 'be/src'
- name: b2bBuyerWebSsrDockerfile
  value: 'fe/projects/AspNetCore/Dockerfile-ssr'
- name: dockerfileSsrBuildContext
  value: 'fe/projects/AspNetCore'
- name: chartPath
  value: 'misc/deployment/BuyerWeb/helm-chart'

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    token=BUILD_ID
    sed -i "s/$token/$(Build.BuildId)/g" $(chartPath)/Chart.yaml
  displayName: Set the Helm Chart appversion
- task: ArchiveFiles@2
  displayName: Zip the Helm Chart
  inputs:
    rootFolderOrFile: $(chartPath)
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/helm-chart.zip'
- task: Npm@1
  displayName: Install Website Dependencies
  inputs:
    command: custom
    verbose: false
    customCommand: 'install --legacy-peer-deps'
- task: Npm@1
  displayName: Build Website
  inputs:
    command: custom
    verbose: false
    customCommand: 'run build-fe'
- task: Docker@2
  displayName: Build and Push Docker Image for Website
  inputs:
    command: buildAndPush
    repository: $(b2bBuyerWebImageRepository)
    dockerfile: $(b2bBuyerWebDockerfile)
    buildContext: $(dockerfileWebsiteBuildContext)
    containerRegistry: $(acrServiceConnection)
    tags: |
      $(Build.BuildId)
- task: Docker@2
  displayName: Build and Push Docker Image for SSR
  inputs:
    command: buildAndPush
    repository: $(b2bBuyerWebReactSsrImageRepository)
    dockerfile: $(b2bBuyerWebSsrDockerfile)
    buildContext: $(dockerfileSsrBuildContext)
    containerRegistry: $(acrServiceConnection)
- task: PublishBuildArtifacts@1
  displayName: Publish artifacts to staging directory
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)