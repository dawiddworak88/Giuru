trigger: none

pr: none

resources:
  pipelines:
  - pipeline: OrderingApiBuild
    source: '[Ordering Api] Build'
    trigger: 
      branches:
        include: 
        - main

variables:
- group: global
- template: './variables.yml'
- name: k8sReleaseName
  value: 'b2b-ordering-api'
- name: helmVersionToInstall
  value: '3.3.4'
- name: helmChartPath
  value: '$(Pipeline.Workspace)/helm-chart'

stages:
- stage: Production
  variables:
  - group: production
  - group: b2b-ordering-api-production
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            displayName: Extract Helm Chart
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/OrderingApiBuild/drop/helm-chart.zip'
              destinationFolder: $(helmChartPath)
          - task: HelmInstaller@1
            displayName: Install Helm
            inputs:
              helmVersionToInstall: $(helmVersionToInstall)
          - task: HelmDeploy@0
            displayName: Login to Kubernetes
            inputs:
              command: login
              azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesCluster)
          - script: |
              stringConnectionString="$(connectionString)"
              escapedConnectionString=${stringConnectionString//,/\\,}

              helm upgrade --install --wait \
              --set image.registry='$(acrLoginServer)' \
              --set image.repository='$(b2bOrderingApiImageRepository)' \
              --set image.tag='$(Resources.Pipeline.OrderingApiBuild.RunID)' \
              --set environment='$(environment)' \
              --set identityUrl='$(identityUrl)' \
              --set mediaUrl='$(mediaUrl)' \
              --set redisUrl='$(redisUrl)' \
              --set logzIoToken='$(logzIoToken)' \
              --set logzIoType='$(logzIoType)' \
              --set logzIoDataCenterSubDomain='$(logzIoDataCenterSubDomain)' \
              --set eventBusConnection='$(eventBusConnection)' \
              --set eventBusRetryCount=`$(eventBusRetryCount)` \
              --set eventBusRequestedHeartbeat=`$(eventBusRequestedHeartbeat)` \
              --set sendGridApiKey='$(sendGridApiKey)' \
              --set applyRecipientEmail='$(applyRecipientEmail)' \
              --set senderEmail='$(senderEmail)' \
              --set senderName='$(senderName)' \
              --set openTelemetryCollectorUrl='$(openTelemetryCollectorUrl)' \
              --set orderingApi.connectionString="$escapedConnectionString" \
              --set orderingApi.actionSendGridCustomOrderTemplateId='$(actionSendGridCustomOrderTemplateId)' \
              --set ingress.orderingapidomain='$(orderingApiDomain)' \
              $(k8sReleaseName) $(helmChartPath)
            displayName: Deploy to Kubernetes